{
  "name": "jwt-auth-pro-wp-rest-api",
  "version": "1.1.0",
  "description": "Simple, secure JWT authentication for WordPress REST API",
  "private": true,
  "scripts": {
    "env": "wp-env",
    "env:start": "wp-env start",
    "env:start:debug": "wp-env start --xdebug",
    "env:stop": "wp-env stop",
    "env:destroy": "wp-env destroy",
    "env:clean": "wp-env clean all",
    "env:logs": "wp-env logs",
    "env:reset": "wp-env destroy && wp-env start",
    "env:update": "wp-env start --update",
    "env:bash": "wp-env run cli bash",
    "composer:install": "wp-env run tests-cli --env-cwd=wp-content/plugins/jwt-auth-pro-wp-rest-api bash -lc 'composer install --no-interaction --prefer-dist'",
    "composer:update": "wp-env run tests-cli --env-cwd=wp-content/plugins/jwt-auth-pro-wp-rest-api bash -lc 'composer update --no-interaction --prefer-dist'",
    "test:setup": "wp-env run tests-cli bash -c 'wp plugin activate jwt-auth-pro-wp-rest-api 2>/dev/null || true'",
    "test": "npm run test:setup && npm run test:unit && npm run test:integration && npm run test:behat",
    "test:unit": "npm run test:setup && wp-env run tests-cli --env-cwd=wp-content/plugins/jwt-auth-pro-wp-rest-api vendor/bin/phpunit --testsuite=unit --testdox",
    "test:integration": "npm run test:setup && wp-env run tests-cli --env-cwd=wp-content/plugins/jwt-auth-pro-wp-rest-api vendor/bin/phpunit --testsuite=integration --testdox",
    "test:behat": "npm run test:setup && composer run behat",
    "test:behat:verbose": "npm run test:setup && vendor/bin/behat --verbose",
    "plugin:check": "wp-env run tests-cli wp plugin check jwt-auth-pro-wp-rest-api --exclude-directories=tests,bin --exclude-files=.gitignore,.phpunit.result.cache,.distignore",
    "preplugin:build": "docker ps --format '{{.Names}}' | grep tests-cli | xargs -I {} docker exec -u root {} apk add --no-cache zip 2>/dev/null || true",
    "plugin:build": "wp-env run tests-cli --env-cwd=wp-content/plugins/jwt-auth-pro-wp-rest-api sh bin/build-plugin.sh $npm_package_version",
    "postinstall": "playwright install --with-deps chromium",
    "prepare": "husky",
    "review": "coderabbit review --plain --type uncommitted",
    "review:staged": "coderabbit review --plain --type uncommitted",
    "review:last": "coderabbit review --plain --type committed --base-commit HEAD~1",
    "review:commit": "coderabbit review --plain --type committed --base-commit",
    "review:ai": "coderabbit review --prompt-only --type uncommitted",
    "review:help": "echo 'Available review commands:\n  npm run review        - Review staged changes\n  npm run review:staged - Same as review\n  npm run review:last   - Review the last commit\n  npm run review:commit <SHA> - Review a specific commit\n  npm run review:ai     - Get AI-friendly output for staged changes'",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:debug": "playwright test --debug",
    "test:e2e:report": "playwright show-report",
    "test:e2e:codegen": "playwright codegen",
    "test:e2e:same-domain": "playwright test --project=same-domain",
    "test:e2e:cross-origin": "playwright test --project=cross-origin",
    "test:e2e:auto-detect": "playwright test --project=auto-detect",
    "test:e2e:strict": "playwright test --project=strict-production",
    "test:e2e:https": "playwright test --project=https",
    "test:scenarios": "npm run test:e2e",
    "test:scenarios:local": "./tests/scripts/run-tests-local.sh",
    "test:scenarios:ci": "CI=true npm run test:e2e",
    "test:app": "cd tests/test-app && npm start",
    "docker:test": "docker compose -f tests/docker/docker-compose.test.yml up --abort-on-container-exit",
    "docker:test:build": "docker compose -f tests/docker/docker-compose.test.yml build",
    "docker:test:down": "docker compose -f tests/docker/docker-compose.test.yml down -v",
    "setup:scenario": "node tests/scripts/configure-scenario.js"
  },
  "devDependencies": {
    "@playwright/test": "^1.48.0",
    "@wordpress/env": "^10.31.0",
    "husky": "^9.1.7"
  },
  "engines": {
    "node": ">=16.0.0",
    "npm": ">=8.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/juanma-wp/jwt-auth-pro-wp-rest-api"
  },
  "keywords": [
    "wordpress",
    "plugin",
    "jwt",
    "authentication",
    "rest-api"
  ],
  "author": "WordPress Developer",
  "license": "GPL-2.0-or-later"
}
