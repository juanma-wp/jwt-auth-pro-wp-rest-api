name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  php-tests:
    name: PHP ${{ matrix.php }} on Ubuntu
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [ '7.4', '8.0', '8.1', '8.2', '8.3' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, intl, json
          tools: composer:v2
          coverage: none

      - name: Validate composer.json and composer.lock
        run: composer validate --no-check-publish

      - name: Cache Composer packages
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Run PHPUnit (direct)
        run: |
          vendor/bin/phpunit --version
          vendor/bin/phpunit --testsuite=unit --testdox

  wp-env-tests:
    name: wp-env tests (Node + Docker)
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node dependencies
        run: npm ci --no-audit --no-fund

      - name: Install PHP dependencies
        uses: php-actions/composer@v6
        with:
          php_version: '8.1'
          version: 2
          args: --no-interaction --prefer-dist

      - name: Start wp-env
        run: npm run env:start

      - name: Run full test suite via wp-env
        run: npm test

      - name: Stop wp-env
        if: always()
        run: npm run env:stop

  phpcs:
    name: PHP CodeSniffer
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: composer:v2, cs2pr

      - name: Install CS dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Run PHPCS
        run: vendor/bin/phpcs -d memory_limit=512M --standard=WordPress --extensions=php .


